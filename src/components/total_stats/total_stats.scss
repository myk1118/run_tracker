.total-stats {
  height: 100%;

  .graph-container {
    height: 50%;

    article {
      height: 100%;
    }
  }

  .test1{
    width:50%;
  }

  .chart-container {
    height: 25%;
  }
}

.runCount {
  height:100%;
  background-color: rgb(140, 255, 125);
}

.tableContainer {
  height: 100%;

  .total, .month, .week {
    cursor: pointer;
  }

  table {
    color: rgb(51, 51, 51);
    font-family: Helvetica, Arial, sans-serif;

    border-collapse:
      collapse;
    border-spacing: 0;
  }

  td,
  th {
    border: 1px solid transparent;
    transition: all 0.3s;
    text-align: center;
  }

  th {
    background: #DFDFDF;
    font-weight: bold;
  }

  td {
    background: #FAFAFA;
  }

  tr:nth-child(even) td {
    background: #F1F1F1;
  }

  tr:nth-child(odd) td {
    background: #FEFEFE;
  }

  tbody tr:hover {
    color: rgb(50, 50, 255);
  }
}

.table {
  text-align: center;
}

.personal-bests {
  .table {
    tr {
      th {
        text-align: left;
        font-weight: normal;
        border-top: none;
      }
      td {
        border-top: none;
        font-size: 2.5rem;
        font-weight: bold;
        span {
          font-weight: normal;
          font-size: 1rem;
        }
      }
    }
  }
}



$borderWidth: 7px;
$animationTime: 1.5s;
$border-color-default: #eee;
$border-color-fill:rgb(250, 69, 56);
$size: 180px;
$howManySteps: 10;


.eventProgress {
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
    text-align: center;
  }
  .eventProgress-left {
    left: 0;
  }
  .eventProgress-bar {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }
  .eventProgress-left .eventProgress-bar {
    left: 100%;
    border-top-right-radius: ($size/2);;
    border-bottom-right-radius: ($size/2);;
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .eventProgress-right {
    right: 0;
    .eventProgress-bar {
      left: -100%;
      border-top-left-radius: ($size/2);;
      border-bottom-left-radius: ($size/2);;
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .eventProgress-value {
    display: flex;
    border-radius: 50%;
    font-size: 30px;
    text-align: center;
    line-height: 20%;
    align-items: center;
    justify-content: center;
    height: 100%;
    //font-family: $work-sans;
    font-weight: 200;
    div {
      margin-top: 10px;
    }
    span {
        font-size: 1rem;
        text-transform: uppercase;
    }
  }
}

/* This for loop creates the 	necessary css animation names
Due to the split circle of eventProgress-left and eventProgress right, we must use the animations on each side.
*/
@for $i from 1 through $howManySteps {
	$stepName: ($i*(100 / $howManySteps));

	//animation only the left side if below 50%
	@if $i <= ($howManySteps/2) {
		.eventProgress[data-percentage="#{$stepName}"] {
			.eventProgress-right .eventProgress-bar {
				 animation: loading-#{$i} $animationTime linear forwards;
			}
			.eventProgress-left .eventProgress-bar {animation: 0;}
		}
	}
	//animation only the right side if above 50%
	@if $i > ($howManySteps/2)  {
		.eventProgress[data-percentage="#{$stepName}"] {
			.eventProgress-right .eventProgress-bar {
				animation: loading-#{($howManySteps/2)} $animationTime linear forwards; //set the animation to longest animation
			}
			.eventProgress-left .eventProgress-bar {
      animation: loading-#{$i - ($howManySteps/2)} $animationTime linear forwards $animationTime;
    }
		}
	}
}

//animation
@for $i from 1 through ($howManySteps/2) {
	$degrees: (180/($howManySteps/2));
	$degrees: ($degrees*$i);
	@keyframes loading-#{$i}{
    0%{
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100%{
        -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}
//additional styling
.eventProgress {
		margin-bottom: 1em;
	}

  @media (max-width: 600px) {

    .tableContainer {
      .total, .month, .week {
        font-size: 0.8rem;
      }
    }

    .personal-bests {
      .table-hover {
        th {
          font-size: 0.7rem;
        }
        .best {
          font-size: 1rem;
          span {
            font-size: 0.7rem;
          }
        }

      }
    }
  }
